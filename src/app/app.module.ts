import { RouterModule } from '@angular/router';
// import { BooksModule } from './books/books.module';
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';
import { AuthEffects } from '@src/app/store/effects/auth.effects';
import { StoreRouterConnectingModule, RouterStateSerializer } from '@ngrx/router-store';
import { reducer, metaReducers } from '@src/app/store/reducers';
import { CustomRouterStateSerializer } from '@src/app/shared/utils';
import { AppRoutes } from '@src/app/app-routing.module';
import { AppComponent } from '@src/app/app.component';
import { CustMaterialModule } from '@src/app/shared/cust-material/cust-material.module';
import { EllipsisPipe } from '@src/app/pipes/ellipsis.pipe';
import { BookService } from '@src/app/services/book.service';
import { SearchBooksComponent } from '@src/app/pages/search-books/search-books.component';
import { BookPreviewComponent } from '@src/app/components/book-preview/book-preview.component';
import { BooksListComponent } from '@src/app/components/books-list/books-list.component';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
import { BookDetailPageComponent } from '@src/app/pages/book-detail-page/book-detail-page.component';
import { BookDetailsComponent } from '@src/app/components/book-details/book-details.component';
import { LocationStrategy, HashLocationStrategy } from '@angular/common';
import { LoginModal } from '@src/app/components/Auth/login-modal.component';
import { CdkTableModule } from '@angular/cdk/table';
import { AuthService } from '@src/app/services/auth.service';
import {catchError,exhaustMap,map,filter,switchMap,retry,finalize} from 'rxjs/operators';
import { TokenInterceptor } from '@src/app/core/interceptors/token.interceptor';
import { AutoGeneratedComponent } from '@src/app/auto-generated/auto-generated.component';

@NgModule({
  declarations: [
    AppComponent,
    EllipsisPipe,
    SearchBooksComponent,
    BookPreviewComponent,
    BooksListComponent,
    BookDetailPageComponent,
      BookDetailsComponent,
      LoginModal,
      AutoGeneratedComponent
  ],
    imports: [
        BrowserAnimationsModule,
        BrowserModule, CommonModule,
        StoreModule.forRoot(reducer,{ metaReducers }),
        StoreRouterConnectingModule.forRoot(), CdkTableModule,
    RouterModule,
    AppRoutes,
        FormsModule, ReactiveFormsModule,
        HttpClientModule, HttpClientModule,
    // BooksModule,
        CustMaterialModule,
        EffectsModule.forRoot([AuthEffects]),
       
  ],
  providers: [{
        provide: LocationStrategy,
        useClass: HashLocationStrategy
  },
      { provide: RouterStateSerializer, useClass: CustomRouterStateSerializer },
      {provide:HTTP_INTERCEPTORS,useClass:TokenInterceptor,multi:true},
      BookService,
      AuthService
    ],
    entryComponents: [LoginModal, AppComponent],
  bootstrap: [AppComponent]
})
export class AppModule { }
